function stikyFooter(){$(".page").height()<window.screen.availHeight-$(".div-footer").height()-56?!$(".div-footer").hasClass("div-footer-fixed")&&$(".div-footer").addClass("div-footer-fixed"):$(".div-footer").hasClass("div-footer-fixed")&&$(".div-footer").removeClass("div-footer-fixed")}var mibo=mibo||{};mibo.config=mibo.config||{API:$("#api").val()||"",TOKEN:$("#token").val()||"",loading:{id:"#loading_panel"}},mibo.promiseq=mibo.promiseq||{},mibo.util=mibo.util||{loading:{show:function(){$(mibo.config.loading.id).show()},hide:function(){$(mibo.config.loading.id).hide()}},http:{post:function(e,t,n){return $.ajax({url:e,type:"post",data:t,contentType:"application/x-www-form-urlencoded; charset=UTF-8",dataType:"json",headers:n||{}})}},system:{error:function(e){var e=e||"You seems to meet up a system error. It is appreciated if you can send an email to us via: rhinostudio2017@gmail.com";alert(e)}},format:{number2kview:function(e){var t=e+"",n=t.length;if(n<=3)return e;var o,i="",r=3;for(i=","+t.slice(-r);r<n;)o=-r,(r+=3)>n&&(r=n),i=","+t.slice(-r,o)+i;return i=i.slice(1)}},pager:function(){return new function(){var e=1,t=1,n=0,o=10;this.setPage=function(t){e=t},this.getPage=function(){return e},this.setTotalPage=function(e){t=e},this.getTotalPage=function(){return t},this.increasePage=function(){e<t&&e++},this.decreasePage=function(){e>1&&e--},this.isFirstPage=function(){return 1==e},this.isLastPage=function(){return e==t},this.setItemCount=function(e){o=e},this.getItemCount=function(){return o},this.setTotalItem=function(e){n=e,this.setTotalPage(Math.floor(n/o)+1)},this.getItemStart=function(){return(e-1)*o}}},form:{post:function(e,t){var n=document.createElement("form");n.target="_blank",n.method="POST",n.action=e,n.style.display="none";for(var o in t){var i=document.createElement("input");i.type="text",i.name=o,i.value=t[o],n.appendChild(i)}document.body.appendChild(n),n.submit(),document.body.removeChild(n)}}},mibo.modal=mibo.modal||{resource:{videoLink:{length:function(){return 128}},posterLink:{length:function(){return 64}},name:{length:function(){return 128}},description:{length:function(){return 256}},author:{length:function(){return 32}},venue:{length:function(){return 64}},note:{length:function(){return 128}}},user:{username:{length:function(){return 64}},password:{length:function(){return 64}},email:{length:function(){return 64}}}},$(window).bind("load",stikyFooter),$("#form_search").submit(function(e){e.preventDefault();var t=$("#page").val();if("admin"==t)"function"==typeof admin_fetchResources&&admin_fetchResources();else if("search"==t)$("#keyword").val($("#search_text").val()),"object"==typeof pager&&pager.setPage(1),"function"==typeof search_searchResources&&search_searchResources();else{var n={};n.keyword=$("#search_text").val(),mibo.util.form.post("/search",n)}});
function admin_formAttachEvent(){$("#form_login").submit(function(e){e.preventDefault();var o=admin_formValidate();if(!0===o){mibo.util.loading.show();var a=a||{};a.token=a.token||mibo.config.TOKEN,a.username=$("#username").val(),a.password=$("#password").val();var i=mibo.util.http.post(mibo.config.API+"user/login",a);mibo.promiseq.admin_user_login=i,i.done(function(e,o,a){if(console.log("data",e),"success"!=e.response.status)return $("#username, #password").addClass("color-error"),mibo.util.loading.hide(),void mibo.util.system.error(e.response.message);mibo.util.loading.hide(),window.location.href="/admin"}).fail(function(){mibo.util.system.error()})}else mibo.util.system.error(o)}),$("#username, #password").focus(function(e){$("#username").hasClass("color-error")&&$("#username").removeClass("color-error"),$("#password").hasClass("color-error")&&$("#password").removeClass("color-error")})}function admin_formValidate(){var e=$("#username").val(),o=$("#password").val();if(""==e.trim()||e.trim().length>mibo.modal.user.username.length())return $("#username").addClass("color-error"),"Username cannot be empty, and the length must less than "+mibo.modal.user.username.length()+".";if(""==o.trim()||o.trim().length>mibo.modal.user.password.length())return $("#password").addClass("color-error"),"Password cannot be empty, and the length must less than "+mibo.modal.user.password.length()+".";var a=/[a-zA-Z0-9_]+/;return a.test(e)?!!a.test(o)||($("#password").addClass("color-error"),"Password must only contain characters, numbers and underscore."):($("#username").addClass("color-error"),"Username must only contain characters, numbers and underscore.")}function admin_fetchResources(){mibo.util.loading.show();var e=e||{};e.token=e.token||mibo.config.TOKEN,e.offset=pager.getItemStart(),e.limit=pager.getItemCount(),e.keyword=$("#search_text").val().trim()||"";var o=mibo.util.http.post(mibo.config.API+"resource/fetch",e);mibo.promiseq.admin_resource_fetch=o,o.done(function(e,o,a){if(console.log("data",e),"success"!=e.response.status)return mibo.util.loading.hide(),void mibo.util.system.error(e.response.message);var i,t=$("#tbody_resource").empty();for(var r in e.response.data.rows)(i=[]).push('<tr id="',e.response.data.rows[r].id,'">'),i.push("<td>"),i.push('<img class="img-icon" src="',decodeURIComponent(e.response.data.rows[r].poster_link),'">'),i.push("</td>"),i.push("<td>",e.response.data.rows[r].description,"</td>"),i.push("<td>",e.response.data.rows[r].produce_time,"</td>"),i.push("<td>"),i.push('<button class="btn btn-sm btn-primary" style="display: inline-block;" fire="edit">'),i.push('<i class="fa fa-remove" aria-hidden="true"></i>'),i.push('<span class="tbl-col-buttons-text">&nbsp;Edit</span>'),i.push("</button>"),i.push('<button class="btn btn-sm btn-danger right" style="display: inline-block;" fire="delete">'),i.push('<i class="fa fa-pencil" aria-hidden="true"></i>'),i.push('<span class="tbl-col-buttons-text">&nbsp;Delete</span>'),i.push("</button>"),i.push("</td>"),i.push("</tr>"),$(i.join("")).data(e.response.data.rows[r]).appendTo(t);admin_attachResourceEvent(),pager.setTotalItem(e.response.data.totalRowCount),$("#page_total").html(pager.getTotalPage()),$("#page_number").val(""),$("#page_active").html(pager.getPage()),pager.isFirstPage()?$("#page_previous").hasClass("disabled")||$("#page_previous").addClass("disabled"):!$("#page_previous").hasClass("disabled")||$("#page_previous").removeClass("disabled"),pager.isLastPage()?$("#page_next").hasClass("disabled")||$("#page_next").addClass("disabled"):!$("#page_next").hasClass("disabled")||$("#page_next").removeClass("disabled"),stikyFooter(),mibo.util.loading.hide()}).fail(function(){mibo.util.system.error()})}function admin_attachResourceEvent(){$("#tbody_resource tr").each(function(){var e=$(this);e.find("button").each(function(){var o=$(this);o.click(function(a){if("edit"==o.attr("fire")){console.log("edit.."),$("#resource_dialog").modal({backdrop:"static",show:!1});var i=e.data();$("#resource_dialog").removeData("mode").removeData("label").removeData("data").data({mode:"edit",label:"Edit",data:{id:i.id,videoLink:decodeURIComponent(i.video_link),posterLink:decodeURIComponent(i.poster_link),name:i.name,description:i.description,author:i.author,produceTime:i.produce_time,runTime:i.run_time,views:i.views,venue:i.venue}}),modalInit(),$("#resource_dialog").modal("show")}else if("delete"==o.attr("fire")){showConfirmDialog("Are you sure to delete?",function(){mibo.util.loading.show();var o=o||{};o.token=o.token||mibo.config.TOKEN,o.id=e.data().id;var a=mibo.util.http.post(mibo.config.API+"resource/remove",o);mibo.promiseq.admin_user_login=a,a.done(function(e,o,a){console.log("data",e),mibo.util.loading.hide(),"success"==e.response.status?admin_fetchResources():mibo.util.system.error(e.response.message)}).fail(function(){mibo.util.system.error()})})}})})})}function admin_attachEvent(){$("#link_logout").click(function(e){mibo.util.loading.show();var o=o||{};o.token=o.token||mibo.config.TOKEN;var a=mibo.util.http.post(mibo.config.API+"user/logout",o);mibo.promiseq.admin_user_login=a,a.done(function(e,o,a){console.log("data",e),"success"!=e.response.status&&(mibo.util.loading.hide(),mibo.util.system.error()),mibo.util.loading.hide(),window.location.href="/admin"}).fail(function(){mibo.util.system.error()})}),$("#resource_add").click(function(e){$("#resource_dialog").modal({backdrop:"static",show:!1}),$("#resource_dialog").removeData("mode").removeData("label").removeData("data").data({mode:"add",label:"Add"}),modalInit(),$("#resource_dialog").modal("show")}),$("#resource_dialog input").focus(function(e){$("#modal-error").hide()}),$("#modal_save").click(modalSubmit),$("#modal_check").click(modalCheckVideo),$("#page_previous a").click(function(e){pager.isFirstPage()||(pager.setPage(pager.getPage()-1),admin_fetchResources())}),$("#page_next a").click(function(e){pager.isLastPage()||(pager.setPage(pager.getPage()+1),console.log("target page: ",pager.getPage()),admin_fetchResources())}),$("#page_go").click(function(e){var o=~~$("#page_number").val();0==o||o>pager.getTotalPage()?mibo.util.system.error("Please input an page number between 1 and "+pager.getTotalPage()):(pager.setPage(o),admin_fetchResources())})}function modalInit(){var e=$("#resource_dialog").data();$("#resource_dialog .modal-title").html(e.label),"add"==e.mode?($("#resource_dialog input").val(""),$("#resource_dialog input#ipt_name").val("Chinese homemade video")):"edit"==e.mode&&[{key:"videoLink",label:"ipt_v_url"},{key:"posterLink",label:"ipt_i_url"},{key:"name",label:"ipt_name"},{key:"description",label:"ipt_description"},{key:"author",label:"ipt_author"},{key:"produceTime",label:"ipt_produceTime"},{key:"runTime",label:"ipt_runTime"},{key:"views",label:"ipt_views"},{key:"venue",label:"ipt_venue"}].forEach(function(o){e.data[o.key]&&$("#"+o.label).val(e.data[o.key])})}function modalSubmit(){var e=modalValidate();if(!0===e){$("#resource_dialog").modal("hide"),showConfirmDialog("Are you sure to save?",function(){var e,o=$("#resource_dialog").data("mode"),a=$("#resource_dialog").data("data")||{};"add"==o?e=mibo.config.API+"resource/add":"edit"==o&&(e=mibo.config.API+"resource/edit"),mibo.util.loading.show(),a.token=a.token||mibo.config.TOKEN,a.videoLink=encodeURIComponent($("#ipt_v_url").val().trim()),a.posterLink=encodeURIComponent($("#ipt_i_url").val().trim()),a.name=$("#ipt_name").val().trim(),a.description=$("#ipt_description").val().trim(),a.author=$("#ipt_author").val().trim(),a.produceTime=$("#ipt_produceTime").val().trim(),a.runTime=$("#ipt_runTime").val().trim(),a.views=$("#ipt_views").val().trim(),a.venue=$("#ipt_venue").val().trim();var i=mibo.util.http.post(e,a);mibo.promiseq.admin_user_login=i,i.done(function(e,o,a){if(console.log("data",e),"success"!=e.response.status)return mibo.util.loading.hide(),void $("#modal-error").show().find("label").html(e.response.message);mibo.util.loading.hide(),$("#resource_dialog").modal("hide"),admin_fetchResources()}).fail(function(e,o,a){mibo.util.system.error("Status: "+o+"<br>Message: "+a)})},function(){$("#resource_dialog").modal({backdrop:"static"})})}else $("#modal-error").show().find("label").html(e)}function modalValidate(){var e=$("#ipt_v_url").val(),o=$("#ipt_i_url").val(),a=$("#ipt_name").val();return""==e.trim()||e.trim().length>mibo.modal.resource.videoLink.length()?"Video URL cannot be empty, and the length must less than "+mibo.modal.resource.videoLink.length()+".":""==o.trim()||o.trim().length>mibo.modal.resource.posterLink.length()?"Poster URL cannot be empty, and the length must less than "+mibo.modal.resource.posterLink.length()+".":!(""==a.trim()||a.trim().length>mibo.modal.resource.name.length())||"Video name cannot be empty, and the length must less than "+mibo.modal.resource.name.length()+"."}function modalCheckVideo(){var e=$("#ipt_v_url").val();if(""==e.trim()||e.trim().length>mibo.modal.resource.videoLink.length())mibo.util.system.error("Video URL cannot be empty, and the length must less than "+mibo.modal.resource.videoLink.length()+".");else{mibo.util.loading.show();var o=o||{};o.token=o.token||mibo.config.TOKEN,o.videoLink=$("#ipt_v_url").val();var a=mibo.util.http.post(mibo.config.API+"resource/exist",o);mibo.promiseq.admin_user_login=a,a.done(function(e,o,a){if(console.log("data",e),mibo.util.loading.hide(),"success"==e.response.status){var i=e.response.data.exist?"The video URL has existed, please try another one.":'<span class="text-success">The video URL do NOT exist, can continue to add.</span>';$("#modal-error").show().find("label").html(i)}else $("#modal-error").show().find("label").html(e.response.message)}).fail(function(){mibo.util.system.error()})}}function showConfirmDialog(e,o,a){$("#confirm_dialog").modal({backdrop:"static",show:!1}),$("#confirm_dialog .modal-body label").html(e),$("#confirm_yes").click(function(e){$("#confirm_dialog").modal("hide"),$("#modal-error").hide(),o&&o()}),$("#confirm_no").click(function(e){$("#confirm_dialog").modal("hide"),a&&a()}),$("#confirm_dialog").on("hide.bs.modal",function(e){$("#confirm_yes").off(),$("#confirm_no").off()}).modal("show")}$(function(){if("admin"!=$("#page").val())return!1;0!=$("#form_login").length?admin_formAttachEvent():(admin_attachEvent(),admin_fetchResources())});var pager=mibo.util.pager();
function home_searchResources(o,t){mibo.util.loading.show();var e={};e.token=mibo.config.TOKEN,e.offset=o.offset||0,e.limit=o.limit||10,e.keyword=o.keyword||null,e.order=o.order||null;var s=mibo.util.http.post(mibo.config.API+"resource/fetch",e);mibo.promiseq.admin_resource_fetch=s,s.done(function(o,e,s){if(console.log("data",o),"success"!=o.response.status)return mibo.util.loading.hide(),void mibo.util.system.error(o.response.message);var r,i=$("#"+t).empty();if(0==o.response.data.totalRowCount)return $("<tr><td><p>There is no result based on your search keyword...</p></td></tr>").appendTo(i),stikyFooter(),void mibo.util.loading.hide();for(var a in o.response.data.rows)(r=[]).push('<tr id="',o.response.data.rows[a].id,'">'),r.push('<td class="tbl-col-img">'),r.push('<img class="img-icon" src="',decodeURIComponent(o.response.data.rows[a].poster_link),'">'),r.push("</td>"),r.push('<td class="tbl-col-author">'),r.push('<p class="td-row">',o.response.data.rows[a].name,"</p>"),r.push('<p class="td-row">',o.response.data.rows[a].author,"</p>"),r.push("</td>"),r.push('<td class="tbl-col-time">'),r.push('<p class="td-row">',o.response.data.rows[a].produce_time,"</p>"),r.push('<p class="td-row">','<i class="fa fa-eye" aria-hidden="true"></i>',mibo.util.format.number2kview(o.response.data.rows[a].views),"</p>"),r.push("</td>"),r.push("<td>",o.response.data.rows[a].description,"</td>"),r.push("</tr>"),$(r.join("")).data(o.response.data.rows[a]).appendTo(i);home_attachResourceEvent(),stikyFooter(),mibo.util.loading.hide()}).fail(function(){mibo.util.system.error()})}function home_attachResourceEvent(){$("#h_n_tbody tr, #h_t_tbody tr").click(function(o){o.preventDefault();var t=$(this).data();mibo.util.form.post("/play",t)})}function home_attachEvent(){$("#btn_more_new_pc, #btn_more_new_mb, #btn_more_top_pc, #btn_more_top_mb").click(function(o){var t={};"top"==$(this).attr("type")&&(t.order="views"),mibo.util.form.post("/search",t)})}$(function(){if("home"!=$("#page").val())return!1;home_attachEvent(),home_searchResources({},"h_n_tbody"),home_searchResources({order:"views"},"h_t_tbody")});
function search_searchResources(){mibo.util.loading.show();var e={};e.token=mibo.config.TOKEN,e.offset=pager.getItemStart(),e.limit=pager.getItemCount();var a=$("#startTime").val(),s=$("#endTime").val(),t=$("#keyword").val(),r=$("#order").val();a&&(e.startTime=a),s&&(e.endTime=s),t&&(e.keyword=t),r&&(e.order=r);var o=mibo.util.http.post(mibo.config.API+"resource/fetch",e);mibo.promiseq.admin_resource_fetch=o,o.done(function(e,a,s){if(console.log("data",e),"success"!=e.response.status)return mibo.util.loading.hide(),void mibo.util.system.error(e.response.message);var t,r=$("#result_tbody").empty();if(0==e.response.data.totalRowCount)return $("<tr><td><p>There is no result based on your search keyword...</p></td></tr>").appendTo(r),stikyFooter(),void mibo.util.loading.hide();for(var o in e.response.data.rows)(t=[]).push('<tr id="',e.response.data.rows[o].id,'">'),t.push('<td class="tbl-col-img">'),t.push('<img class="img-icon" src="',decodeURIComponent(e.response.data.rows[o].poster_link),'">'),t.push("</td>"),t.push('<td class="tbl-col-author">'),t.push('<p class="td-row">',e.response.data.rows[o].name,"</p>"),t.push('<p class="td-row">',e.response.data.rows[o].author,"</p>"),t.push("</td>"),t.push('<td class="tbl-col-time">'),t.push('<p class="td-row">',e.response.data.rows[o].produce_time,"</p>"),t.push('<p class="td-row">','<i class="fa fa-eye" aria-hidden="true"></i>',mibo.util.format.number2kview(e.response.data.rows[o].views),"</p>"),t.push("</td>"),t.push("<td>",e.response.data.rows[o].description,"</td>"),t.push("</tr>"),$(t.join("")).data(e.response.data.rows[o]).appendTo(r);search_attachResourceEvent(),pager.setTotalItem(e.response.data.totalRowCount),$("#page_total").html(pager.getTotalPage()),$("#page_number").val(""),$("#page_active").html(pager.getPage()),pager.isFirstPage()?$("#page_previous").hasClass("disabled")||$("#page_previous").addClass("disabled"):!$("#page_previous").hasClass("disabled")||$("#page_previous").removeClass("disabled"),pager.isLastPage()?$("#page_next").hasClass("disabled")||$("#page_next").addClass("disabled"):!$("#page_next").hasClass("disabled")||$("#page_next").removeClass("disabled"),stikyFooter(),mibo.util.loading.hide()}).fail(function(){mibo.util.system.error()})}function search_attachResourceEvent(){$("#result_tbody tr").click(function(e){e.preventDefault();var a=$(this).data();mibo.util.form.post("/play",a)})}function search_attachEvent(){$("#page_previous a").click(function(e){pager.isFirstPage()||(pager.setPage(pager.getPage()-1),search_searchResources())}),$("#page_next a").click(function(e){pager.isLastPage()||(pager.setPage(pager.getPage()+1),console.log("target page: ",pager.getPage()),search_searchResources())}),$("#page_go").click(function(e){var a=~~$("#page_number").val();0==a||a>pager.getTotalPage()?mibo.util.system.error("Please input an page number between 1 and "+pager.getTotalPage()):(pager.setPage(a),search_searchResources())})}$(function(){if("search"!=$("#page").val())return!1;search_attachEvent(),search_searchResources()});var pager=mibo.util.pager();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
